#include <utils/misc.h>
#include <utils/Log.h>
#include <hardware/hardware.h>
#include <hardware/myfake.h>
#include <stdio.h>

static inline int myfake_device_open(const hw_module_t *module, struct myfake_device_t ** device)
{
    return module->methods->open(module, MYFAKE_HARDWARE_MODULE_ID, (struct hw_device_t **)device);
}

int main (int argc, char** argv)
{

    myfake_module_t *module = 0;
    myfake_device_t *device = 0;
    int valGet = 0;
    int valSet = 5;
    int error = 0;

    printf("Initialize HAL stub myfake .....\n");

    //加载硬件抽象层
    error = hw_get_module(MYFAKE_HARDWARE_MODULE_ID, (const struct hw_module_t**)&module);
    if (error)
    {
        printf("device myfake ont found . the error code is %d\n",error);
        return 0x10; 
    }
    else
    {
        printf("Device myfake found.\n");
    }

    error = myfake_device_open(&(module->common), &device);
    if (error != 0)
    {
        printf("Filed to open device myfake.The error code is %d\n", error);
        return 0x20;
    }else{
        printf("device myfake open\n");
    }

    device->get_val(device, &valGet);

    printf("The value get from myfake is %d\n",valGet);

    device->set_val(device,valSet); 
    printf("Set the value for myfake is %d\n",valSet);

    device->get_val(device,&valGet); 
    printf("The value get from myfake is %d\n",valGet); 
    return 0;
}




