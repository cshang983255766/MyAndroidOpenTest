

#include <utils/misc.h>
#include <utils/Log.h>
#include <hardware/hardware.h>
#include <hardware/mydrv.h>
#include <stdio.h>


static inline int mydrv_device_open(const hw_module_t *module, struct mydrv_device_t ** device)
{
    return module->methods->open(module, MYDRV_HARDWARE_MODULE_ID, (struct hw_device_t **)device);
}

int main (int argc, char* argv[])
{

    mydrv_module_t *module = 0;
    mydrv_device_t *device = 0;
    int valHig = 1;
    int vallow = 0;
    int error = 0;

    printf("Initialize HAL stub mydrv .....\n");

    //加载硬件抽象层
    error = hw_get_module(MYDRV_HARDWARE_MODULE_ID, (const struct hw_module_t**)&module);
    if (error)
    {
        printf("device mydrv ont found . the error code is %d\n",error);
        return 0x10; 
    }
    else
    {
        printf("Device mydrv found.\n");
    }

    error = mydrv_device_open(&(module->common), &device);
    if (error != 0)
    {
        printf("Filed to open device mydrv.The error code is %d\n", error);
        return 0x20;
    }else{
        printf("device mydrv open\n");
    }

    if (!strcmp(argv[1],"0"))
    {
        device->set_low(device, vallow);
    }else if (!strcmp(argv[1], "1"))
    {
        device->set_low(device, valHig);
    }else{
        printf("error : input parame!\n");
    }

    return 0;
}






